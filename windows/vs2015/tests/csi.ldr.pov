// Generated by L3P v1.4 BETA 20080930 (Win32)  (C) 1998-2008 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Apr 14 01:28:51 2017
// Input file:   C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp\csi.ldr
// Title:        // ROTSTEP  0 0 0
// ModelDir:     C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp
// WorkDir:      C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp
// LDRAWDIR:     C:\Users\Trevor\LDraw (-ldd<dir> option)
// SearchDirs:   (Default)
// SearchDir1:   C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp\ (0x10)
// SearchDir2:   C:\Users\Trevor\LDraw\P\ (0x9)
// SearchDir3:   C:\Users\Trevor\LDraw\PARTS\ (0x4)
// SearchDir4:   C:\Users\Trevor\LDraw\MODELS\ (0x0)
// LGEODIR:      C:\Users\Trevor\LDraw\lgeo (-lgd<dir> option)
// ldconfig.ldr: C:\Users\Trevor\LDraw\ldconfig.ldr
// Commandline:  "C:\Program Files\LPub3D\3rdParty\l3p1.4WinB\L3P.EXE" -ca0.01 -cg0.0,0.0,6231336 -ld -lgeo -lgdC:\Users\Trevor\LDraw\lgeo -car1.54485 -o -lddC:\Users\Trevor\LDraw "-q4 -sw2" C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp\csi.ldr C:\Users\Trevor\Desktop\LPub\6964-01\LPub3D\tmp\CSILDR~1.POV

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 4;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


#declare lg_quality = L3Quality;
#declare lg_studs = L3Studs;

#include "lg_defs.inc"
#include "lg_color.inc"

#declare L3LDrawToLgeo = transform { matrix <0,-LG_BRICK_WIDTH/20,0, 0,0,-LG_BRICK_HEIGHT/24, -LG_BRICK_WIDTH/20,0,0, 0,0,4*LG_BRICK_HEIGHT/24> }
#declare L3LgeoToLDraw = transform { matrix <0,0,-20/LG_BRICK_WIDTH, -20/LG_BRICK_WIDTH,0,0, 0,-24/LG_BRICK_HEIGHT,0, 0,0,0> }




//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish { lg_solid_finish }
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish { lg_chrome_finish }
#end

#ifndef (L3FinishPearlescent)
#declare L3FinishPearlescent = finish { lg_pearl_finish }
#end

#ifndef (L3FinishRubber)
//Not supported in LGEO, using Opaque
#declare L3FinishRubber = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMatte_metallic)
//Not supported in LGEO, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported in LGEO, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish { lg_transparent_finish }
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { lg_ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from lg_color.inc)
#ifndef (L3Texture7)
#declare L3Texture7 = texture { lg_grey }
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 72 Dark_Bluish_Gray (from lg_color.inc)
#ifndef (L3Texture72)
#declare L3Texture72 = texture { lg_dark_bluish_grey }
#end
#ifndef (L3Texture72_slope)
#declare L3Texture72_slope = L3TextureSlope(L3Texture72)
#end
#ifndef (L3Color72)
#declare L3Color72 = L3Material(L3Texture72)
#end
#ifndef (L3Color72_slope)
#declare L3Color72_slope = L3Material(L3Texture72_slope)
#end


//// Color 378 Sand_Green (from lg_color.inc)
#ifndef (L3Texture378)
#declare L3Texture378 = texture { lg_sand_green }
#end
#ifndef (L3Texture378_slope)
#declare L3Texture378_slope = L3TextureSlope(L3Texture378)
#end
#ifndef (L3Color378)
#declare L3Color378 = L3Material(L3Texture378)
#end
#ifndef (L3Color378_slope)
#declare L3Color378_slope = L3Material(L3Texture378_slope)
#end


//// Color 19 Tan (from lg_color.inc)
#ifndef (L3Texture19)
#declare L3Texture19 = texture { lg_tan }
#end
#ifndef (L3Texture19_slope)
#declare L3Texture19_slope = L3TextureSlope(L3Texture19)
#end
#ifndef (L3Color19)
#declare L3Color19 = L3Material(L3Texture19)
#end
#ifndef (L3Color19_slope)
#declare L3Color19_slope = L3Material(L3Texture19_slope)
#end


//// Color 70 Reddish_Brown (from lg_color.inc)
#ifndef (L3Texture70)
#declare L3Texture70 = texture { lg_reddish_brown }
#end
#ifndef (L3Texture70_slope)
#declare L3Texture70_slope = L3TextureSlope(L3Texture70)
#end
#ifndef (L3Color70)
#declare L3Color70 = L3Material(L3Texture70)
#end
#ifndef (L3Color70_slope)
#declare L3Color70_slope = L3Material(L3Texture70_slope)
#end


//// Color 71 Light_Bluish_Gray (from lg_color.inc)
#ifndef (L3Texture71)
#declare L3Texture71 = texture { lg_bluish_grey }
#end
#ifndef (L3Texture71_slope)
#declare L3Texture71_slope = L3TextureSlope(L3Texture71)
#end
#ifndef (L3Color71)
#declare L3Color71 = L3Material(L3Texture71)
#end
#ifndef (L3Color71_slope)
#declare L3Color71_slope = L3Material(L3Texture71_slope)
#end


//// Color 0 Black (from lg_color.inc)
#ifndef (L3Texture0)
#declare L3Texture0 = texture { lg_black }
#end
#ifndef (L3Texture0_slope)
#declare L3Texture0_slope = L3TextureSlope(L3Texture0)
#end
#ifndef (L3Color0)
#declare L3Color0 = L3Material(L3Texture0)
#end
#ifndef (L3Color0_slope)
#declare L3Color0_slope = L3Material(L3Texture0_slope)
#end


//// Part 3795.dat
#ifndef (_3795_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3795)
		#include "lg_3795.inc"
	#end
#end
#declare _3795_dot_dat = #if (L3Quality = 0) box { <-60,-4,-20>, <60,8,20> } #else object {
// Plate  2 x  6
	lg_3795
	transform L3LgeoToLDraw
}
#end
#declare _3795_dot_dat_clear = #if (L3Quality = 0) box { <-60,-4,-20>, <60,8,20> } #else object {
// Plate  2 x  6
	lg_3795_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3795_dot_dat)


//// Primitive stud3.dat
#ifndef (stud3_dot_dat)
#declare stud3_dot_dat = cylinder { <0,0,0>, <0,-4,0>, 4 }
#end // ifndef (stud3_dot_dat)


//// Primitive stud2.dat
#ifndef (stud2_dot_dat)
#declare stud2_dot_dat = object {
	lg_tech_knob
	transform L3LgeoToLDraw
}
#end // ifndef (stud2_dot_dat)


//// Primitive box5.dat
#ifndef (box5_dot_dat)
#declare box5_dot_dat = object {
// Box with 5 Faces and All Edges
// Name: box5.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box5_dot_dat)


//// Part 3794a.dat
#ifndef (_3794a_dot_dat)
#declare _3794a_dot_dat = #if (L3Quality = 0) box { <-20,-4,-10>, <20,8,10> } #else union {
// Plate  1 x  2 without Groove with 1 Centre Stud
// Name: 3794a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2011-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS jumper, offset, tile, spacer
// !HISTORY 2002-07-16 [fwcain] Added keywords.
// !HISTORY 2002-08-18 [PTadmin] Official Update 2002-04
// !HISTORY 2004-07-25 [guyvivan] Made BFC Compliant
// !HISTORY 2004-11-06 [PTadmin] Official Update 2004-04
// !HISTORY 2007-06-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2011-11-12 [PTadmin] Renamed from 3794
// !HISTORY 2011-12-05 [MagFors] Retitled, was "Plate  1 x  2 with 1 Stud"
// !HISTORY 2011-12-29 [PTadmin] Official Update 2011-02
	#if (L3Studs)
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,4,0> }
// BFC INVERTNEXT
	#end
	object { box5_dot_dat matrix <16,0,0,0,-4,0,0,0,6,0,8,0> }
// 
	mesh {
		triangle { <20,8,10>, <16,8,6>, <-16,8,6> }
		triangle { <-16,8,6>, <-20,8,10>, <20,8,10> }
		triangle { <-20,8,10>, <-16,8,6>, <-16,8,-6> }
		triangle { <-16,8,-6>, <-20,8,-10>, <-20,8,10> }
		triangle { <-20,8,-10>, <-16,8,-6>, <16,8,-6> }
		triangle { <16,8,-6>, <20,8,-10>, <-20,8,-10> }
		triangle { <20,8,-10>, <16,8,-6>, <16,8,6> }
		triangle { <16,8,6>, <20,8,10>, <20,8,-10> }
	}
	object { box5_dot_dat matrix <20,0,0,0,-8,0,0,0,10,0,8,0> }
	#if (L3Studs)
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	#end
}
#end
#end // ifndef (_3794a_dot_dat)


//// Part 3680c01.dat
#ifndef (_3680c01_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3680c01)
		#include "lg_3680c01.inc"
	#end
#end
#declare _3680c01_dot_dat = #if (L3Quality = 0) box { <-20.9033,-4,-20.9033>, <20.9033,8,20.9033> } #else object {
// Turntable  2 x  2 Plate with Light Grey Top
	lg_3680c01
	transform L3LgeoToLDraw
}
#end
#declare _3680c01_dot_dat_clear = #if (L3Quality = 0) box { <-20.9033,-4,-20.9033>, <20.9033,8,20.9033> } #else object {
// Turntable  2 x  2 Plate with Light Grey Top
	lg_3680c01_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3680c01_dot_dat)


//// Part 3040b.dat
#ifndef (_3040b_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3040b)
		#include "lg_3040b.inc"
	#end
#end
#declare _3040b_dot_dat = #if (L3Quality = 0) box { <-10,-4,-30>, <10,24,10> } #else object {
// Slope Brick 45  2 x  1
	lg_3040b
	transform L3LgeoToLDraw
}
#end
#declare _3040b_dot_dat_clear = #if (L3Quality = 0) box { <-10,-4,-30>, <10,24,10> } #else object {
// Slope Brick 45  2 x  1
	lg_3040b_clear
	transform L3LgeoToLDraw
}
#end
#if (L3Quality > 0)
#declare _3040b_dot_dat_slope = object {
// Slope Brick 45  2 x  1
	lg_3040b_slope
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3040b_dot_dat)


//// Part 3679.dat
#ifndef (_3679_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3679)
		#include "lg_3679.inc"
	#end
#end
#declare _3679_dot_dat = #if (L3Quality = 0) box { <-18.4853,-4,-18.4853>, <18.4853,8,18.4853> } #else object {
// Turntable  2 x  2 Plate Top
	lg_3679
	transform L3LgeoToLDraw
}
#end
#declare _3679_dot_dat_clear = #if (L3Quality = 0) box { <-18.4853,-4,-18.4853>, <18.4853,8,18.4853> } #else object {
// Turntable  2 x  2 Plate Top
	lg_3679_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3679_dot_dat)


//// Part 3680.dat
#ifndef (_3680_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3680)
		#include "lg_3680.inc"
	#end
#end
#declare _3680_dot_dat = #if (L3Quality = 0) box { <-20.9033,0,-20.9033>, <20.9033,8,20.9033> } #else object {
// Turntable  2 x  2 Plate Base
	lg_3680
	transform L3LgeoToLDraw
}
#end
#declare _3680_dot_dat_clear = #if (L3Quality = 0) box { <-20.9033,0,-20.9033>, <20.9033,8,20.9033> } #else object {
// Turntable  2 x  2 Plate Base
	lg_3680_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3680_dot_dat)


//// Part 3680c02.dat
#ifndef (_3680c02_dot_dat)
#declare _3680c02_dot_dat = #if (L3Quality = 0) box { <-20.9033,-4,-20.9033>, <20.9033,8,20.9033> } #else union {
// Turntable  2 x  2 Plate with Light Bluish Grey Top
// Name: 3680c02.dat
// Author: Magnus Forsberg [MagFors]
// !LDRAW_ORG Shortcut UPDATE 2015-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2015-10-11 [PTadmin] Official Update 2015-01
	object {
		_3679_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		material { L3Color71 }
	}
	object {
		_3680_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
}
#end
#end // ifndef (_3680c02_dot_dat)


//// Part 4070.dat
#ifndef (_4070_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_4070)
		#include "lg_4070.inc"
	#end
#end
#declare _4070_dot_dat = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else object {
// Brick  1 x  1 with Headlight
	lg_4070
	transform L3LgeoToLDraw
}
#end
#declare _4070_dot_dat_clear = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else object {
// Brick  1 x  1 with Headlight
	lg_4070_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_4070_dot_dat)


//// Primitive box4-1.dat
#ifndef (box4_dash_1_dot_dat)
#declare box4_dash_1_dot_dat = object {
// Box with 4 Faces without 1 Edge
// Name: box4-1.dat
// Author: Tore Eriksson [Tore_Eriksson]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-07-15 [PTadmin] Official Update 1998-07
// !HISTORY 2002-04-05 [hafhead] Made BFC compliant
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4_dash_1_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Primitive rect3.dat
#ifndef (rect3_dot_dat)
#declare rect3_dot_dat = object {
// Rectangle with 3 Edges
// Name: rect3.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] Change winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect3_dot_dat)


//// Primitive 4-4cyls.dat
#ifndef (_4_dash_4cyls_dot_dat)
#declare _4_dash_4cyls_dot_dat = object {
// Cylinder Sloped 1.0
// Name: 4-4cyls.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <0.9239,0.0761,0.3827>, <0.9239,0,0.3827>, <1,0,0> }
		triangle { <0.9239,0.0761,0.3827>, <0.7071,0.2929,0.7071>, <0.7071,0,0.7071> }
		triangle { <0.7071,0,0.7071>, <0.9239,0,0.3827>, <0.9239,0.0761,0.3827> }
		triangle { <0.7071,0.2929,0.7071>, <0.3827,0.6173,0.9239>, <0.3827,0,0.9239> }
		triangle { <0.3827,0,0.9239>, <0.7071,0,0.7071>, <0.7071,0.2929,0.7071> }
		triangle { <0.3827,0.6173,0.9239>, <0,1,1>, <0,0,1> }
		triangle { <0,0,1>, <0.3827,0,0.9239>, <0.3827,0.6173,0.9239> }
		triangle { <0,1,1>, <-0.3827,1.3827,0.9239>, <-0.3827,0,0.9239> }
		triangle { <-0.3827,0,0.9239>, <0,0,1>, <0,1,1> }
		triangle { <-0.3827,1.3827,0.9239>, <-0.7071,1.7071,0.7071>, <-0.7071,0,0.7071> }
		triangle { <-0.7071,0,0.7071>, <-0.3827,0,0.9239>, <-0.3827,1.3827,0.9239> }
		triangle { <-0.7071,1.7071,0.7071>, <-0.9239,1.9239,0.3827>, <-0.9239,0,0.3827> }
		triangle { <-0.9239,0,0.3827>, <-0.7071,0,0.7071>, <-0.7071,1.7071,0.7071> }
		triangle { <-0.9239,1.9239,0.3827>, <-1,2,0>, <-1,0,0> }
		triangle { <-1,0,0>, <-0.9239,0,0.3827>, <-0.9239,1.9239,0.3827> }
		triangle { <-1,2,0>, <-0.9239,1.9239,-0.3827>, <-0.9239,0,-0.3827> }
		triangle { <-0.9239,0,-0.3827>, <-1,0,0>, <-1,2,0> }
		triangle { <-0.9239,1.9239,-0.3827>, <-0.7071,1.7071,-0.7071>, <-0.7071,0,-0.7071> }
		triangle { <-0.7071,0,-0.7071>, <-0.9239,0,-0.3827>, <-0.9239,1.9239,-0.3827> }
		triangle { <-0.7071,1.7071,-0.7071>, <-0.3827,1.3827,-0.9239>, <-0.3827,0,-0.9239> }
		triangle { <-0.3827,0,-0.9239>, <-0.7071,0,-0.7071>, <-0.7071,1.7071,-0.7071> }
		triangle { <-0.3827,1.3827,-0.9239>, <0,1,-1>, <0,0,-1> }
		triangle { <0,0,-1>, <-0.3827,0,-0.9239>, <-0.3827,1.3827,-0.9239> }
		triangle { <0,1,-1>, <0.3827,0.6173,-0.9239>, <0.3827,0,-0.9239> }
		triangle { <0.3827,0,-0.9239>, <0,0,-1>, <0,1,-1> }
		triangle { <0.3827,0.6173,-0.9239>, <0.7071,0.2929,-0.7071>, <0.7071,0,-0.7071> }
		triangle { <0.7071,0,-0.7071>, <0.3827,0,-0.9239>, <0.3827,0.6173,-0.9239> }
		triangle { <0.7071,0.2929,-0.7071>, <0.9239,0.0761,-0.3827>, <0.9239,0,-0.3827> }
		triangle { <0.9239,0,-0.3827>, <0.7071,0,-0.7071>, <0.7071,0.2929,-0.7071> }
		triangle { <0.9239,0,-0.3827>, <0.9239,0.0761,-0.3827>, <1,0,0> }
	}
}
#end // ifndef (_4_dash_4cyls_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive stud3a.dat
#ifndef (stud3a_dot_dat)
#declare stud3a_dot_dat = cylinder { <0,0,0>, <0,-4,0>, 4 }
#end // ifndef (stud3a_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive stud4a.dat
#ifndef (stud4a_dot_dat)
#declare stud4a_dot_dat = object {
	lg_plate_cylinder scale <1,1,-1> translate <0,0,LG_PLATE_INNER_HEIGHT>
	transform L3LgeoToLDraw
}
#end // ifndef (stud4a_dot_dat)


//// Primitive stud.dat
#ifndef (stud_dot_dat)
#declare stud_dot_dat = object {
	lg_knob
	transform L3LgeoToLDraw
}
#end // ifndef (stud_dot_dat)


//// Part s\48933s01.dat
#ifndef (s_slash_48933s01_dot_dat)
#declare s_slash_48933s01_dot_dat = #if (L3Quality = 0) box { <-40,-4,-70>, <40,24,10> } #else union {
// ~Wedge  4 x  4 Triple with Stud Notches without Faces and Lines
// Name: s\48933s01.dat
// Author: Willy Tschager [Holly-Wood]
// !LDRAW_ORG Subpart UPDATE 2010-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !HISTORY 2007-08-25 {The LEGO Universe Team} Original part shape
// !HISTORY 2008-03-03 [Holly-Wood] File preparation for LDraw Parts Tracker
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
	#if (L3Studs)
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,4,0> }
	#end
	object { box4_dash_1_dot_dat matrix <0,0,1,0,4,0,-2,0,0,18,4,0> }
	object { box4_dash_1_dot_dat matrix <0,0,-1,0,4,0,2,0,0,-18,4,0> }
	object { box4_dash_1_dot_dat matrix <1,0,0,0,4,0,0,0,2,10,4,-8> }
	object { box4_dash_1_dot_dat matrix <1,0,0,0,4,0,0,0,2,-10,4,-8> }
	object { rect_dot_dat matrix <2,0,0,0,0,1,0,4.67,0,18,11.33,-21> }
	object { rect_dot_dat matrix <2,0,0,0,0,-1,0,5,0,18,11,-19> }
	object { rect2p_dot_dat matrix <0,0,-1,0,-1,0,-2,0,0,18,16,-20> }
	object { rect_dot_dat matrix <2,0,0,0,0,1,0,4.67,0,-18,11.33,-21> }
	object { rect_dot_dat matrix <2,0,0,0,0,-1,0,5,0,-18,11,-19> }
	object { rect2p_dot_dat matrix <0,0,-1,0,-1,0,-2,0,0,-18,16,-20> }
	object { rect_dot_dat matrix <1,0,0,0,-1,0,0,0,2,10,16,-28> }
	object { rect_dot_dat matrix <1,0,0,0,-1,0,0,0,2,-10,16,-28> }
	object { rect3_dot_dat matrix <1,0,0,0,0,-1,0,-3.83,0,10,12.17,-26> }
	object { rect3_dot_dat matrix <1,0,0,0,0,-1,0,-3.83,0,-10,12.17,-26> }
	object { _4_dash_4cyls_dot_dat matrix <0,0,-4,0,-1.33,0,4,0,0,0,7.68,-20> }
	#if (L3Studs)
		object { stud3a_dot_dat matrix <1,0,0,0,-2.08,0,0,0,1,0,7.68,-20> }
// BFC INVERTNEXT
	#end
	object { _4_dash_4cyls_dot_dat matrix <0,0,-6,0,-1.95,0,6,0,0,0,18.45,-50> }
	object { _4_dash_4cyls_dot_dat matrix <0,0,-8,0,-2.55,0,8,0,0,0,19.12,-50> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,0.67,0,0,0,6,0,18.45,-50> }
	#if (L3Studs)
		object { stud4a_dot_dat matrix <1,0,0,0,-1.22,0,0,0,1,0,19.12,-50> }
	#end
	object { rect_dot_dat matrix <0,2,0,1,0,0,0,0,8,36,22,-2> }
	object { rect_dot_dat matrix <0,-4.375,0,-1,0,0,0,0,-1.875,31.25,19.625,-8.125> }
	object { rect_dot_dat matrix <0,-5.625,0,1,0,0,0,0,1.875,28.75,18.375,-8.125> }
	object { rect_dot_dat matrix <0,8,0,-1,0,0,0,0,8,24,16,-2> }
	object { rect_dot_dat matrix <0,2,0,-1,0,0,0,0,-8,-36,22,-2> }
	object { rect_dot_dat matrix <0,4.375,0,1,0,0,0,0,1.875,-31.25,19.625,-8.125> }
	object { rect_dot_dat matrix <0,5.625,0,-1,0,0,0,0,-1.875,-28.75,18.375,-8.125> }
	object { rect_dot_dat matrix <0,8,0,1,0,0,0,0,-8,-24,16,-2> }
	object { rect_dot_dat matrix <0,6.5,0,0,0,1,16,0,0,0,17.5,-33> }
	object { rect_dot_dat matrix <0,2,0,0,0,1,2,0,0,-18,22,-61> }
	object { rect2p_dot_dat matrix <-0.83,0,2.5,-1,0,0,0,2,0,-19.17,22,-63.5> }
	object { rect_dot_dat matrix <0,2,0,0,0,-1,-18.33,0,0,0,22,-66> }
	object { rect2p_dot_dat matrix <-0.83,0,-2.5,1,0,0,0,2,0,19.17,22,-63.5> }
	object { rect_dot_dat matrix <0,2,0,0,0,1,2,0,0,18,22,-61> }
	object { rect_dot_dat matrix <1,0,0,0,-1,0,0,-4.34,13,19,15,-46> }
	object { rect_dot_dat matrix <1,0,0,0,-1,0,0,-4.34,13,-19,15,-46> }
	object { rect3_dot_dat matrix <16,0,0,0,-1,0,0,4.5,-14,0,15.5,-47> }
	object { rect_dot_dat matrix <0,7.16,0,0,0,-1,20,0,0,0,16.84,-30> }
	object { rect3_dot_dat matrix <20,0,0,0,0,1,0,-5.83,0,0,10.17,-14> }
	object { rect_dot_dat matrix <20,0,0,0,-1,0,0,0,2,0,16,-12> }
	object { rect2p_dot_dat matrix <0,-6,0,0,0,-1,-20,0,0,0,10,-10> }
	object { rect_dot_dat matrix <20,0,0,0,-1,0,0,0,8,0,4,-2> }
	object { rect2p_dot_dat matrix <0,-2,0,0,0,1,-20,0,0,0,6,6> }
	object { rect_dot_dat matrix <20,0,0,0,-1,0,0,0,2,0,8,8> }
	object { rect_dot_dat matrix <0,0,-10,0,1,0,20,0,0,0,0,0> }
	object { rect_dot_dat matrix <0,0,-10,-1,0,0,0,2,0,40,22,0> }
	object { rect_dot_dat matrix <0,0,-10,1,0,0,0,2,0,-40,22,0> }
	object { rect_dot_dat matrix <-20,0,0,0,0,1,0,2,0,0,22,-70> }
	mesh {
		triangle { <20,4.34,-14>, <-20,4.34,-14>, <-20,9.67,-30> }
		triangle { <-20,9.67,-30>, <20,9.67,-30>, <20,4.34,-14> }
		triangle { <16,6,-19>, <16,6.67,-21>, <16,16,-21> }
		triangle { <16,16,-21>, <16,16,-19>, <16,6,-19> }
		triangle { <-16,6.67,-21>, <-16,6,-19>, <-16,16,-19> }
		triangle { <-16,16,-19>, <-16,16,-21>, <-16,6.67,-21> }
		triangle { <11,8.33,-26>, <11,16,-26>, <11,16,-30> }
		triangle { <11,16,-30>, <11,9.67,-30>, <11,8.33,-26> }
		triangle { <9,16,-26>, <9,8.33,-26>, <9,9.67,-30> }
		triangle { <9,9.67,-30>, <9,16,-30>, <9,16,-26> }
		triangle { <-9,8.33,-26>, <-9,16,-26>, <-9,16,-30> }
		triangle { <-9,16,-30>, <-9,9.67,-30>, <-9,8.33,-26> }
		triangle { <-11,16,-26>, <-11,8.33,-26>, <-11,9.67,-30> }
		triangle { <-11,9.67,-30>, <-11,16,-30>, <-11,16,-26> }
		triangle { <24,8,6>, <24,8,-10>, <28.75,12.75,-10> }
		triangle { <28.75,12.75,-10>, <28.75,12.75,-6.25>, <24,8,6> }
		triangle { <36,20,6>, <24,8,6>, <28.75,12.75,-6.25> }
		triangle { <28.75,12.75,-6.25>, <31.25,15.25,-6.25>, <36,20,6> }
		triangle { <31.25,15.25,-10>, <36,20,-10>, <36,20,6> }
		triangle { <36,20,6>, <31.25,15.25,-6.25>, <31.25,15.25,-10> }
		triangle { <28.75,12.75,-6.25>, <28.75,24,-6.25>, <31.25,24,-6.25> }
		triangle { <31.25,24,-6.25>, <31.25,15.25,-6.25>, <28.75,12.75,-6.25> }
		triangle { <31.25,24,-6.25>, <28.75,24,-6.25>, <28.75,24,-10> }
		triangle { <28.75,24,-10>, <31.25,24,-10>, <31.25,24,-6.25> }
		triangle { <-28.75,12.75,-6.25>, <-28.75,12.75,-10>, <-24,8,-10> }
		triangle { <-24,8,-10>, <-24,8,6>, <-28.75,12.75,-6.25> }
		triangle { <-31.25,15.25,-6.25>, <-28.75,12.75,-6.25>, <-24,8,6> }
		triangle { <-24,8,6>, <-36,20,6>, <-31.25,15.25,-6.25> }
		triangle { <-31.25,15.25,-6.25>, <-36,20,6>, <-36,20,-10> }
		triangle { <-36,20,-10>, <-31.25,15.25,-10>, <-31.25,15.25,-6.25> }
		triangle { <-31.25,15.25,-6.25>, <-31.25,24,-6.25>, <-28.75,24,-6.25> }
		triangle { <-28.75,24,-6.25>, <-28.75,12.75,-6.25>, <-31.25,15.25,-6.25> }
		triangle { <-31.25,24,-10>, <-28.75,24,-10>, <-28.75,24,-6.25> }
		triangle { <-28.75,24,-6.25>, <-31.25,24,-6.25>, <-31.25,24,-10> }
		triangle { <22,24,-33>, <20,24,-30>, <-20,24,-30> }
		triangle { <-20,24,-30>, <-22,24,-33>, <22,24,-33> }
		triangle { <20,24,-30>, <22,24,-33>, <22,24,-13> }
		triangle { <22,24,-13>, <20,24,10>, <20,24,-30> }
		triangle { <-22,24,-33>, <-20,24,-30>, <-20,24,10> }
		triangle { <-20,24,10>, <-22,24,-13>, <-22,24,-33> }
		triangle { <22,24,-13>, <24,24,-10>, <24,24,6> }
		triangle { <24,24,6>, <20,24,10>, <22,24,-13> }
		triangle { <28.75,24,-10>, <24,24,-10>, <22,24,-13> }
		triangle { <31.25,24,-10>, <28.75,24,-10>, <22,24,-13> }
		triangle { <22,24,-13>, <36,24,-13>, <31.25,24,-10> }
		triangle { <36,24,-13>, <36,24,-10>, <31.25,24,-10> }
		triangle { <-24,24,-10>, <-22,24,-13>, <-20,24,10> }
		triangle { <-20,24,10>, <-24,24,6>, <-24,24,-10> }
		triangle { <-22,24,-13>, <-24,24,-10>, <-28.75,24,-10> }
		triangle { <-36,24,-13>, <-22,24,-13>, <-28.75,24,-10> }
		triangle { <-28.75,24,-10>, <-31.25,24,-10>, <-36,24,-13> }
		triangle { <-31.25,24,-10>, <-36,24,-10>, <-36,24,-13> }
		triangle { <20,24,10>, <24,24,6>, <36,24,6> }
		triangle { <36,24,6>, <40,24,10>, <20,24,10> }
		triangle { <-24,24,6>, <-20,24,10>, <-40,24,10> }
		triangle { <-40,24,10>, <-36,24,6>, <-24,24,6> }
		triangle { <40,24,10>, <36,24,6>, <36,24,-13> }
		triangle { <36,24,-13>, <40,24,-10>, <40,24,10> }
		triangle { <-36,24,6>, <-40,24,10>, <-40,24,-10> }
		triangle { <-40,24,-10>, <-36,24,-13>, <-36,24,6> }
		triangle { <20,24,-70>, <18.33,24,-66>, <-18.33,24,-66> }
		triangle { <-18.33,24,-66>, <-20,24,-70>, <20,24,-70> }
		triangle { <20,24,-70>, <20,24,-61>, <18.34,24,-66> }
		triangle { <20,24,-70>, <28.02,24,-45.93>, <20.67,24,-59> }
		triangle { <20.67,24,-59>, <20,24,-61>, <20,24,-70> }
		triangle { <28.02,24,-45.93>, <25.326,24,-45.029>, <20.67,24,-59> }
		triangle { <34.02,24,-27.93>, <31.325,24,-27.028>, <29.278,24,-33.169> }
		triangle { <29.278,24,-33.169>, <31.98,24,-34.07>, <34.02,24,-27.93> }
		triangle { <40,24,-10>, <36,24,-13>, <35.277,24,-15.169> }
		triangle { <35.277,24,-15.169>, <37.98,24,-16.07>, <40,24,-10> }
		triangle { <-18.34,24,-66>, <-20,24,-61>, <-20,24,-70> }
		triangle { <-20,24,-61>, <-20.67,24,-59>, <-28.02,24,-45.93> }
		triangle { <-28.02,24,-45.93>, <-20,24,-70>, <-20,24,-61> }
		triangle { <-20.67,24,-59>, <-25.326,24,-45.029>, <-28.02,24,-45.93> }
		triangle { <-31.98,24,-34.07>, <-29.278,24,-33.169>, <-31.325,24,-27.028> }
		triangle { <-31.325,24,-27.028>, <-34.02,24,-27.93>, <-31.98,24,-34.07> }
		triangle { <-37.98,24,-16.07>, <-35.277,24,-15.169>, <-36,24,-13> }
		triangle { <-36,24,-13>, <-40,24,-10>, <-37.98,24,-16.07> }
		triangle { <-20.67,24,-59>, <-20,24,-61>, <-16,24,-61> }
		triangle { <-16,24,-61>, <-18,24,-59>, <-20.67,24,-59> }
		triangle { <20,24,-61>, <20.67,24,-59>, <18,24,-59> }
		triangle { <18,24,-59>, <16,24,-61>, <20,24,-61> }
		triangle { <-18,24,-59>, <-16,24,-61>, <-16,24,-33> }
		triangle { <-16,24,-33>, <-18,24,-33>, <-18,24,-59> }
		triangle { <16,24,-61>, <18,24,-59>, <18,24,-33> }
		triangle { <18,24,-33>, <16,24,-33>, <16,24,-61> }
		triangle { <18.33,20,-66>, <20,20,-61>, <-20,20,-61> }
		triangle { <-20,20,-61>, <-18.33,20,-66>, <18.33,20,-66> }
		triangle { <-16,24,-33>, <-16,24,-61>, <-16,20,-61> }
		triangle { <-16,20,-61>, <-16,11,-33>, <-16,24,-33> }
		triangle { <16,24,-61>, <16,24,-33>, <16,11,-33> }
		triangle { <16,11,-33>, <16,20,-61>, <16,24,-61> }
		triangle { <22,6,-13>, <36,20,-13>, <36,24,-13> }
		triangle { <36,24,-13>, <22,24,-13>, <22,6,-13> }
		triangle { <22,12.65,-33>, <22,6,-13>, <22,24,-13> }
		triangle { <22,24,-13>, <22,24,-33>, <22,12.65,-33> }
		triangle { <22,12.65,-33>, <18,10.66,-33>, <20,10.66,-33> }
		triangle { <18,10.66,-33>, <22,12.65,-33>, <22,24,-33> }
		triangle { <22,24,-33>, <18,24,-33>, <18,10.66,-33> }
		triangle { <18,19.34,-59>, <18,10.66,-33>, <18,24,-33> }
		triangle { <18,24,-33>, <18,24,-59>, <18,19.34,-59> }
		triangle { <20,19.33,-59>, <18,19.33,-59>, <20.67,20,-59> }
		triangle { <20.67,20,-59>, <18,19.33,-59>, <18,24,-59> }
		triangle { <18,24,-59>, <20.67,24,-59>, <20.67,20,-59> }
		triangle { <20.67,24,-59>, <25.326,24,-45.029>, <25.326,20,-45.029> }
		triangle { <25.326,20,-45.029>, <20.67,20,-59>, <20.67,24,-59> }
		triangle { <29.278,20,-33.169>, <29.278,24,-33.169>, <31.325,24,-27.028> }
		triangle { <31.325,24,-27.028>, <31.325,20,-27.028>, <29.278,20,-33.169> }
		triangle { <35.277,24,-15.169>, <36,24,-13>, <36,20,-13> }
		triangle { <36,20,-13>, <35.277,20,-15.169>, <35.277,24,-15.169> }
		triangle { <25.326,24,-45.029>, <28.02,24,-45.93>, <28.02,20,-45.93> }
		triangle { <28.02,20,-45.93>, <25.326,20,-45.029>, <25.326,24,-45.029> }
		triangle { <31.98,24,-34.07>, <29.278,24,-33.169>, <29.278,20,-33.169> }
		triangle { <29.278,20,-33.169>, <31.98,20,-34.07>, <31.98,24,-34.07> }
		triangle { <31.325,24,-27.028>, <34.02,24,-27.93>, <34.02,20,-27.93> }
		triangle { <34.02,20,-27.93>, <31.325,20,-27.028>, <31.325,24,-27.028> }
		triangle { <37.98,24,-16.07>, <35.277,24,-15.169>, <35.277,20,-15.169> }
		triangle { <35.277,20,-15.169>, <37.98,20,-16.07>, <37.98,24,-16.07> }
		triangle { <-36,20,-13>, <-22,6,-13>, <-22,24,-13> }
		triangle { <-22,24,-13>, <-36,24,-13>, <-36,20,-13> }
		triangle { <-22,6,-13>, <-22,12.65,-33>, <-22,24,-33> }
		triangle { <-22,24,-33>, <-22,24,-13>, <-22,6,-13> }
		triangle { <-22,12.65,-33>, <-20,10.66,-33>, <-18,10.66,-33> }
		triangle { <-22,12.65,-33>, <-18,10.66,-33>, <-18,24,-33> }
		triangle { <-18,24,-33>, <-22,24,-33>, <-22,12.65,-33> }
		triangle { <-18,10.66,-33>, <-18,19.34,-59>, <-18,24,-59> }
		triangle { <-18,24,-59>, <-18,24,-33>, <-18,10.66,-33> }
		triangle { <-18,19.33,-59>, <-20,19.33,-59>, <-20.67,20,-59> }
		triangle { <-18,19.33,-59>, <-20.67,20,-59>, <-20.67,24,-59> }
		triangle { <-20.67,24,-59>, <-18,24,-59>, <-18,19.33,-59> }
		triangle { <-20.67,20,-59>, <-25.326,20,-45.029>, <-25.326,24,-45.029> }
		triangle { <-25.326,24,-45.029>, <-20.67,24,-59>, <-20.67,20,-59> }
		triangle { <-31.325,20,-27.028>, <-31.325,24,-27.028>, <-29.278,24,-33.169> }
		triangle { <-29.278,24,-33.169>, <-29.278,20,-33.169>, <-31.325,20,-27.028> }
		triangle { <-35.277,20,-15.169>, <-36,20,-13>, <-36,24,-13> }
		triangle { <-36,24,-13>, <-35.277,24,-15.169>, <-35.277,20,-15.169> }
		triangle { <-25.326,20,-45.029>, <-28.02,20,-45.93>, <-28.02,24,-45.93> }
		triangle { <-28.02,24,-45.93>, <-25.326,24,-45.029>, <-25.326,20,-45.029> }
		triangle { <-31.98,20,-34.07>, <-29.278,20,-33.169>, <-29.278,24,-33.169> }
		triangle { <-29.278,24,-33.169>, <-31.98,24,-34.07>, <-31.98,20,-34.07> }
		triangle { <-31.325,20,-27.028>, <-34.02,20,-27.93>, <-34.02,24,-27.93> }
		triangle { <-34.02,24,-27.93>, <-31.325,24,-27.028>, <-31.325,20,-27.028> }
		triangle { <-37.98,20,-16.07>, <-35.277,20,-15.169>, <-35.277,24,-15.169> }
		triangle { <-35.277,24,-15.169>, <-37.98,24,-16.07>, <-37.98,20,-16.07> }
		triangle { <-20,9.66,-30>, <-20,4.34,-14>, <-20,16,-14> }
		triangle { <-20,16,-14>, <-20,24,-30>, <-20,9.66,-30> }
		triangle { <20,4.34,-14>, <20,9.66,-30>, <20,24,-30> }
		triangle { <20,24,-30>, <20,16,-14>, <20,4.34,-14> }
		triangle { <31.25,15.25,-10>, <31.25,24,-10>, <36,24,-10> }
		triangle { <36,24,-10>, <36,20,-10>, <31.25,15.25,-10> }
		triangle { <24,24,-10>, <28.75,24,-10>, <28.75,12.75,-10> }
		triangle { <28.75,12.75,-10>, <24,8,-10>, <24,24,-10> }
		triangle { <24,8,6>, <36,20,6>, <36,24,6> }
		triangle { <36,24,6>, <24,24,6>, <24,8,6> }
		triangle { <-24,8,-10>, <-28.75,12.75,-10>, <-28.75,24,-10> }
		triangle { <-28.75,24,-10>, <-24,24,-10>, <-24,8,-10> }
		triangle { <-36,20,-10>, <-36,24,-10>, <-31.25,24,-10> }
		triangle { <-31.25,24,-10>, <-31.25,15.25,-10>, <-36,20,-10> }
		triangle { <-36,20,6>, <-24,8,6>, <-24,24,6> }
		triangle { <-24,24,6>, <-36,24,6>, <-36,20,6> }
		triangle { <20,16,-14>, <20,24,-30>, <20,24,10> }
		triangle { <20,24,10>, <20,16,-10>, <20,16,-14> }
		triangle { <-20,24,-30>, <-20,16,-14>, <-20,16,-10> }
		triangle { <-20,16,-10>, <-20,24,10>, <-20,24,-30> }
		triangle { <-20,4,-10>, <-20,4,6>, <-20,8,6> }
		triangle { <-20,8,6>, <-20,16,-10>, <-20,4,-10> }
		triangle { <20,4,6>, <20,4,-10>, <20,16,-10> }
		triangle { <20,16,-10>, <20,8,6>, <20,4,6> }
		triangle { <20,8,6>, <20,16,-10>, <20,24,10> }
		triangle { <20,24,10>, <20,8,10>, <20,8,6> }
		triangle { <-20,16,-10>, <-20,8,6>, <-20,8,10> }
		triangle { <-20,8,10>, <-20,24,10>, <-20,16,-10> }
		triangle { <20,4,-13>, <20,20,-61>, <36,20,-13> }
		triangle { <-20,20,-61>, <-20,4,-13>, <-36,20,-13> }
		triangle { <20,8,10>, <20,0,10>, <-20,0,10> }
		triangle { <-20,0,10>, <-20,8,10>, <20,8,10> }
		triangle { <20,0,10>, <20,24,10>, <40,24,10> }
		triangle { <40,24,10>, <40,20,10>, <20,0,10> }
		triangle { <-20,24,10>, <-20,0,10>, <-40,20,10> }
		triangle { <-40,20,10>, <-40,24,10>, <-20,24,10> }
		triangle { <31.98,20,-34.07>, <29.278,20,-33.169>, <25.326,20,-45.029> }
		triangle { <25.326,20,-45.029>, <28.02,20,-45.93>, <31.98,20,-34.07> }
		triangle { <31.325,20,-27.028>, <34.02,20,-27.93>, <37.98,20,-16.07> }
		triangle { <37.98,20,-16.07>, <35.277,20,-15.169>, <31.325,20,-27.028> }
		triangle { <20,24,-70>, <20,20,-70>, <28.02,20,-45.93> }
		triangle { <28.02,20,-45.93>, <28.02,24,-45.93>, <20,24,-70> }
		triangle { <31.98,20,-34.07>, <34.02,20,-27.93>, <34.02,24,-27.93> }
		triangle { <34.02,24,-27.93>, <31.98,24,-34.07>, <31.98,20,-34.07> }
		triangle { <37.98,24,-16.07>, <37.98,20,-16.07>, <40,20,-10> }
		triangle { <40,20,-10>, <40,24,-10>, <37.98,24,-16.07> }
		triangle { <-28.02,20,-45.93>, <-25.326,20,-45.029>, <-29.278,20,-33.169> }
		triangle { <-29.278,20,-33.169>, <-31.98,20,-34.07>, <-28.02,20,-45.93> }
		triangle { <-35.277,20,-15.169>, <-37.98,20,-16.07>, <-34.02,20,-27.93> }
		triangle { <-34.02,20,-27.93>, <-31.325,20,-27.028>, <-35.277,20,-15.169> }
		triangle { <-28.02,24,-45.93>, <-28.02,20,-45.93>, <-20,20,-70> }
		triangle { <-20,20,-70>, <-20,24,-70>, <-28.02,24,-45.93> }
		triangle { <-31.98,24,-34.07>, <-34.02,24,-27.93>, <-34.02,20,-27.93> }
		triangle { <-34.02,20,-27.93>, <-31.98,20,-34.07>, <-31.98,24,-34.07> }
		triangle { <-40,24,-10>, <-40,20,-10>, <-37.98,20,-16.07> }
		triangle { <-37.98,20,-16.07>, <-37.98,24,-16.07>, <-40,24,-10> }
	}
	#if (L3Studs)
		object { stud_dot_dat matrix <0,0,-1,0,1,0,1,0,0,10,0,0> }
		object { stud_dot_dat matrix <0,0,-1,0,1,0,1,0,0,-10,0,0> }
	#end
}
#end
#end // ifndef (s_slash_48933s01_dot_dat)


//// Primitive stug-2x1.dat
#ifndef (stug_dash_2x1_dot_dat)
#declare stug_dash_2x1_dot_dat = union {
// Stud Group  2 x  1
// Name: stug-2x1.dat
// Author: Magnus Forsberg [MagFors]
// !LDRAW_ORG Primitive UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
	object { stud_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,10> }
	object { stud_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,-10> }
}
#end // ifndef (stug_dash_2x1_dot_dat)


//// Part 48933ps1.dat
#ifndef (_48933ps1_dot_dat)
#declare _48933ps1_dot_dat = #if (L3Quality = 0) box { <-40,-4,-70>, <40,24,10> } #else union {
// Wedge  4 x  4 Triple with Stud Notches & Grey Mechanical Pattern
// Name: 48933ps1.dat
// Author: Damien Roux [Darats]
// !LDRAW_ORG Part UPDATE 2011-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS Star Wars, Boba Fett, Slave I
// !HISTORY 2011-12-29 [PTadmin] Official Update 2011-02
	object { s_slash_48933s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	#if (L3Studs)
		object { stug_dash_2x1_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,0,0> }
	#end
	mesh {
		triangle { <-20,0,10>, <-40,20,10>, <-40,20,-10> }
		triangle { <-40,20,-10>, <-20,0,-10>, <-20,0,10> }
		triangle { <20,0,-10>, <40,20,-10>, <40,20,10> }
		triangle { <40,20,10>, <20,0,10>, <20,0,-10> }
// 
// Pattern
	}
	mesh {
		triangle { <-31,13.417,-17.25>, <-33.25,13.667,-11.25>, <-38.652,20,-14.044> }
		triangle { <-38.652,20,-14.044>, <-36.53,20,-20.41>, <-31,13.417,-17.25> }
		triangle { <-31.851,17.004,-25.461>, <-34.106,19.533,-26.281>, <-33.491,19.014,-26.568> }
		triangle { <-33.491,19.014,-26.568>, <-32.138,17.496,-26.076>, <-31.851,17.004,-25.461> }
		triangle { <-33.491,19.014,-26.568>, <-34.106,19.533,-26.281>, <-33.285,19.464,-28.537> }
		triangle { <-33.285,19.464,-28.537>, <-32.998,18.972,-27.922>, <-33.491,19.014,-26.568> }
		triangle { <-33.285,19.464,-28.537>, <-31.03,16.935,-27.716>, <-31.645,17.455,-27.429> }
		triangle { <-31.645,17.455,-27.429>, <-32.998,18.972,-27.922>, <-33.285,19.464,-28.537> }
		triangle { <-30.651,16.978,-28.981>, <-32.906,19.507,-29.801>, <-32.291,18.987,-30.088> }
		triangle { <-32.291,18.987,-30.088>, <-30.938,17.47,-29.596>, <-30.651,16.978,-28.981> }
		triangle { <-32.291,18.987,-30.088>, <-32.906,19.507,-29.801>, <-32.085,19.438,-32.057> }
		triangle { <-32.085,19.438,-32.057>, <-31.798,18.946,-31.442>, <-32.291,18.987,-30.088> }
		triangle { <-31.03,16.935,-27.716>, <-31.851,17.004,-25.461>, <-32.138,17.496,-26.076> }
		triangle { <-32.138,17.496,-26.076>, <-31.645,17.455,-27.429>, <-31.03,16.935,-27.716> }
		triangle { <-32.085,19.438,-32.057>, <-29.83,16.909,-31.236>, <-30.445,17.428,-30.949> }
		triangle { <-30.445,17.428,-30.949>, <-31.798,18.946,-31.442>, <-32.085,19.438,-32.057> }
		triangle { <-29.83,16.909,-31.236>, <-30.651,16.978,-28.981>, <-30.938,17.47,-29.596> }
		triangle { <-30.938,17.47,-29.596>, <-30.445,17.428,-30.949>, <-29.83,16.909,-31.236> }
		triangle { <-22.4,11.467,-37.2>, <-22.1,10.933,-36.5>, <-26.2,15.433,-37.7> }
		triangle { <-26.2,15.433,-37.7>, <-25.5,14.867,-38.1>, <-22.4,11.467,-37.2> }
		triangle { <-25.5,14.867,-38.1>, <-26.2,15.433,-37.7>, <-24.75,15.417,-42> }
		triangle { <-24.75,15.417,-42>, <-24.5,14.917,-41.25>, <-25.5,14.867,-38.1> }
		triangle { <-24.5,14.917,-41.25>, <-24.75,15.417,-42>, <-20.8,11,-40.6> }
		triangle { <-20.8,11,-40.6>, <-21.5,11.567,-40.2>, <-24.5,14.917,-41.25> }
		triangle { <-22.1,10.933,-36.5>, <-22.4,11.467,-37.2>, <-21.5,11.567,-40.2> }
		triangle { <-21.5,11.567,-40.2>, <-20.8,11,-40.6>, <-22.1,10.933,-36.5> }
		triangle { <-10.5,0.333,-11>, <-11.1,0.333,-11>, <-11.1,12.667,-48> }
		triangle { <-11.1,12.667,-48>, <-10.5,12.467,-47.4>, <-10.5,0.333,-11> }
		triangle { <-10.5,12.467,-47.4>, <-11.1,12.667,-48>, <-6.6,12.667,-48> }
		triangle { <-6.6,12.667,-48>, <-6.6,12.467,-47.4>, <-10.5,12.467,-47.4> }
		triangle { <-6.6,12.467,-47.4>, <-6,12.667,-48>, <6,12.667,-48> }
		triangle { <6,12.667,-48>, <6.6,12.467,-47.4>, <-6.6,12.467,-47.4> }
		triangle { <-6,12.667,-48>, <-6.6,12.467,-47.4>, <-6.6,12.667,-48> }
		triangle { <-6,12.667,-48>, <-6.6,12.667,-48>, <-6.6,18.867,-66.6> }
		triangle { <-6.6,18.867,-66.6>, <-6,18.667,-66>, <-6,12.667,-48> }
		triangle { <-6,18.667,-66>, <-6.6,18.867,-66.6>, <6.6,18.867,-66.6> }
		triangle { <6.6,18.867,-66.6>, <6,18.667,-66>, <-6,18.667,-66> }
		triangle { <-2.1,11.333,-44>, <-1.5,11.333,-44>, <-1.386,11.142,-43.426> }
		triangle { <-1.386,11.142,-43.426>, <-1.94,11.065,-43.196>, <-2.1,11.333,-44> }
		triangle { <-1.386,11.525,-44.574>, <-1.5,11.333,-44>, <-2.1,11.333,-44> }
		triangle { <-2.1,11.333,-44>, <-1.94,11.601,-44.804>, <-1.386,11.525,-44.574> }
		triangle { <-1.94,11.065,-43.196>, <-1.386,11.142,-43.426>, <-1.061,10.98,-42.939> }
		triangle { <-1.061,10.98,-42.939>, <-1.485,10.838,-42.515>, <-1.94,11.065,-43.196> }
		triangle { <-1.061,11.687,-45.061>, <-1.386,11.525,-44.574>, <-1.94,11.601,-44.804> }
		triangle { <-1.94,11.601,-44.804>, <-1.485,11.828,-45.485>, <-1.061,11.687,-45.061> }
		triangle { <-1.485,10.838,-42.515>, <-1.061,10.98,-42.939>, <-0.574,10.871,-42.614> }
		triangle { <-0.574,10.871,-42.614>, <-0.804,10.687,-42.06>, <-1.485,10.838,-42.515> }
		triangle { <-0.574,11.795,-45.386>, <-1.061,11.687,-45.061>, <-1.485,11.828,-45.485> }
		triangle { <-1.485,11.828,-45.485>, <-0.804,11.98,-45.94>, <-0.574,11.795,-45.386> }
		triangle { <-0.804,10.687,-42.06>, <-0.574,10.871,-42.614>, <0,10.833,-42.5> }
		triangle { <0,10.833,-42.5>, <0,10.633,-41.9>, <-0.804,10.687,-42.06> }
		triangle { <0,11.833,-45.5>, <-0.574,11.795,-45.386>, <-0.804,11.98,-45.94> }
		triangle { <-0.804,11.98,-45.94>, <0,12.033,-46.1>, <0,11.833,-45.5> }
		triangle { <0,10.833,-42.5>, <0.574,10.871,-42.614>, <0.804,10.687,-42.06> }
		triangle { <0.804,10.687,-42.06>, <0,10.633,-41.9>, <0,10.833,-42.5> }
		triangle { <0.574,11.795,-45.386>, <0,11.833,-45.5>, <0,12.033,-46.1> }
		triangle { <0,12.033,-46.1>, <0.804,11.98,-45.94>, <0.574,11.795,-45.386> }
		triangle { <0.574,10.871,-42.614>, <1.061,10.98,-42.939>, <1.485,10.838,-42.515> }
		triangle { <1.485,10.838,-42.515>, <0.804,10.687,-42.06>, <0.574,10.871,-42.614> }
		triangle { <1.061,11.687,-45.061>, <0.574,11.795,-45.386>, <0.804,11.98,-45.94> }
		triangle { <0.804,11.98,-45.94>, <1.485,11.828,-45.485>, <1.061,11.687,-45.061> }
		triangle { <1.061,10.98,-42.939>, <1.386,11.142,-43.426>, <1.94,11.065,-43.196> }
		triangle { <1.94,11.065,-43.196>, <1.485,10.838,-42.515>, <1.061,10.98,-42.939> }
		triangle { <1.386,11.525,-44.574>, <1.061,11.687,-45.061>, <1.485,11.828,-45.485> }
		triangle { <1.485,11.828,-45.485>, <1.94,11.601,-44.804>, <1.386,11.525,-44.574> }
		triangle { <2.1,11.333,-44>, <1.94,11.065,-43.196>, <1.386,11.142,-43.426> }
		triangle { <1.386,11.142,-43.426>, <1.5,11.333,-44>, <2.1,11.333,-44> }
		triangle { <1.5,11.333,-44>, <1.386,11.525,-44.574>, <1.94,11.601,-44.804> }
		triangle { <1.94,11.601,-44.804>, <2.1,11.333,-44>, <1.5,11.333,-44> }
		triangle { <6.6,12.667,-48>, <6.6,12.467,-47.4>, <6,12.667,-48> }
		triangle { <6.6,12.667,-48>, <6,12.667,-48>, <6,18.667,-66> }
		triangle { <6,18.667,-66>, <6.6,18.867,-66.6>, <6.6,12.667,-48> }
		triangle { <10.5,12.467,-47.4>, <6.6,12.467,-47.4>, <6.6,12.667,-48> }
		triangle { <6.6,12.667,-48>, <11.1,12.667,-48>, <10.5,12.467,-47.4> }
		triangle { <11.1,12.667,-48>, <11.1,0.333,-11>, <10.5,0.333,-11> }
		triangle { <10.5,0.333,-11>, <10.5,12.467,-47.4>, <11.1,12.667,-48> }
		triangle { <33.25,13.667,-11.25>, <31,13.417,-17.25>, <36.53,20,-20.41> }
		triangle { <36.53,20,-20.41>, <38.652,20,-14.044>, <33.25,13.667,-11.25> }
		material { L3Color0 }
	}
	mesh {
		triangle { <-32.998,18.972,-27.922>, <-31.645,17.455,-27.429>, <-32.138,17.496,-26.076> }
		triangle { <-32.138,17.496,-26.076>, <-33.491,19.014,-26.568>, <-32.998,18.972,-27.922> }
		triangle { <-31.798,18.946,-31.442>, <-30.445,17.428,-30.949>, <-30.938,17.47,-29.596> }
		triangle { <-30.938,17.47,-29.596>, <-32.291,18.987,-30.088>, <-31.798,18.946,-31.442> }
		triangle { <-21.5,11.567,-40.2>, <-22.4,11.467,-37.2>, <-25.5,14.867,-38.1> }
		triangle { <-25.5,14.867,-38.1>, <-24.5,14.917,-41.25>, <-21.5,11.567,-40.2> }
		material { L3Color72 }
	}
	mesh {
		triangle { <-12.6,0.133,-10.4>, <-12.6,12.667,-48>, <-11.1,12.667,-48> }
		triangle { <-11.1,12.667,-48>, <-11.1,0.333,-11>, <-12.6,0.133,-10.4> }
		triangle { <-10.5,0.333,-11>, <-12.6,0.133,-10.4>, <-11.1,0.333,-11> }
		triangle { <-12.6,0.133,-10.4>, <-10.5,0.333,-11>, <10.5,0.333,-11> }
		triangle { <10.5,0.333,-11>, <12.6,0.133,-10.4>, <-12.6,0.133,-10.4> }
		triangle { <-11.1,12.667,-48>, <-12.6,12.667,-48>, <-12.6,19.033,-67.1> }
		triangle { <-12.6,19.033,-67.1>, <-11.1,18.867,-66.6>, <-11.1,12.667,-48> }
		triangle { <-11.1,18.867,-66.6>, <-12.6,19.033,-67.1>, <-6.6,19.033,-67.1> }
		triangle { <-6.6,19.033,-67.1>, <-6.6,18.867,-66.6>, <-11.1,18.867,-66.6> }
		triangle { <-11.1,12.667,-48>, <-11.1,18.867,-66.6>, <-6.6,18.867,-66.6> }
		triangle { <-6.6,18.867,-66.6>, <-6.6,12.667,-48>, <-11.1,12.667,-48> }
		triangle { <-1.94,11.065,-43.196>, <-1.485,10.838,-42.515>, <-10.5,0.333,-11> }
		triangle { <-10.5,12.467,-47.4>, <-2.1,11.333,-44>, <-1.94,11.065,-43.196> }
		triangle { <-1.94,11.065,-43.196>, <-10.5,0.333,-11>, <-10.5,12.467,-47.4> }
		triangle { <-1.485,10.838,-42.515>, <-0.804,10.687,-42.06>, <-10.5,0.333,-11> }
		triangle { <0,10.633,-41.9>, <10.5,0.333,-11>, <-10.5,0.333,-11> }
		triangle { <-10.5,0.333,-11>, <-0.804,10.687,-42.06>, <0,10.633,-41.9> }
		triangle { <-1.94,11.601,-44.804>, <-2.1,11.333,-44>, <-10.5,12.467,-47.4> }
		triangle { <-10.5,12.467,-47.4>, <-6.6,12.467,-47.4>, <-1.485,11.828,-45.485> }
		triangle { <-1.485,11.828,-45.485>, <-1.94,11.601,-44.804>, <-10.5,12.467,-47.4> }
		triangle { <-0.804,11.98,-45.94>, <-1.485,11.828,-45.485>, <-6.6,12.467,-47.4> }
		triangle { <-0.804,11.98,-45.94>, <-6.6,12.467,-47.4>, <0,12.033,-46.1> }
		triangle { <0,12.033,-46.1>, <-6.6,12.467,-47.4>, <6.6,12.467,-47.4> }
		triangle { <-6.6,18.867,-66.6>, <-6.6,19.033,-67.1>, <6.6,19.033,-67.1> }
		triangle { <6.6,19.033,-67.1>, <6.6,18.867,-66.6>, <-6.6,18.867,-66.6> }
		material { L3Color71 }
	}
	mesh {
		triangle { <0,11.333,-44>, <-1.386,11.142,-43.426>, <-1.5,11.333,-44> }
		triangle { <-1.5,11.333,-44>, <-1.386,11.525,-44.574>, <0,11.333,-44> }
		triangle { <-1.061,10.98,-42.939>, <-1.386,11.142,-43.426>, <0,11.333,-44> }
		triangle { <0,11.333,-44>, <-0.574,10.871,-42.614>, <-1.061,10.98,-42.939> }
		triangle { <0,11.333,-44>, <-1.386,11.525,-44.574>, <-1.061,11.687,-45.061> }
		triangle { <-1.061,11.687,-45.061>, <-0.574,11.795,-45.386>, <0,11.333,-44> }
		triangle { <0,10.833,-42.5>, <-0.574,10.871,-42.614>, <0,11.333,-44> }
		triangle { <0,11.333,-44>, <0.574,10.871,-42.614>, <0,10.833,-42.5> }
		triangle { <0,11.333,-44>, <-0.574,11.795,-45.386>, <0,11.833,-45.5> }
		triangle { <0,11.833,-45.5>, <0.574,11.795,-45.386>, <0,11.333,-44> }
		material { L3Color72 }
	}
	mesh {
		triangle { <0.804,10.687,-42.06>, <10.5,0.333,-11>, <0,10.633,-41.9> }
		material { L3Color71 }
	}
	mesh {
		triangle { <1.061,10.98,-42.939>, <0.574,10.871,-42.614>, <0,11.333,-44> }
		triangle { <0,11.333,-44>, <1.386,11.142,-43.426>, <1.061,10.98,-42.939> }
		triangle { <1.5,11.333,-44>, <1.386,11.142,-43.426>, <0,11.333,-44> }
		triangle { <0,11.333,-44>, <1.386,11.525,-44.574>, <1.5,11.333,-44> }
		triangle { <0,11.333,-44>, <0.574,11.795,-45.386>, <1.061,11.687,-45.061> }
		triangle { <1.061,11.687,-45.061>, <1.386,11.525,-44.574>, <0,11.333,-44> }
		material { L3Color72 }
	}
	mesh {
		triangle { <0.804,11.98,-45.94>, <0,12.033,-46.1>, <6.6,12.467,-47.4> }
		triangle { <1.485,10.838,-42.515>, <10.5,0.333,-11>, <0.804,10.687,-42.06> }
		triangle { <1.485,11.828,-45.485>, <0.804,11.98,-45.94>, <6.6,12.467,-47.4> }
		triangle { <1.94,11.065,-43.196>, <10.5,0.333,-11>, <1.485,10.838,-42.515> }
		triangle { <1.94,11.601,-44.804>, <1.485,11.828,-45.485>, <6.6,12.467,-47.4> }
		triangle { <6.6,12.467,-47.4>, <10.5,12.467,-47.4>, <1.94,11.601,-44.804> }
		triangle { <1.94,11.065,-43.196>, <2.1,11.333,-44>, <10.5,12.467,-47.4> }
		triangle { <10.5,12.467,-47.4>, <10.5,0.333,-11>, <1.94,11.065,-43.196> }
		triangle { <1.94,11.601,-44.804>, <10.5,12.467,-47.4>, <2.1,11.333,-44> }
		triangle { <11.1,12.667,-48>, <6.6,12.667,-48>, <6.6,18.867,-66.6> }
		triangle { <6.6,18.867,-66.6>, <11.1,18.867,-66.6>, <11.1,12.667,-48> }
		triangle { <6.6,19.033,-67.1>, <12.6,19.033,-67.1>, <11.1,18.867,-66.6> }
		triangle { <11.1,18.867,-66.6>, <6.6,18.867,-66.6>, <6.6,19.033,-67.1> }
		triangle { <10.5,0.333,-11>, <11.1,0.333,-11>, <12.6,0.133,-10.4> }
		triangle { <12.6,0.133,-10.4>, <11.1,0.333,-11>, <11.1,12.667,-48> }
		triangle { <11.1,12.667,-48>, <12.6,12.667,-48>, <12.6,0.133,-10.4> }
		triangle { <12.6,12.667,-48>, <11.1,12.667,-48>, <11.1,18.867,-66.6> }
		triangle { <11.1,18.867,-66.6>, <12.6,19.033,-67.1>, <12.6,12.667,-48> }
		material { L3Color71 }
	}
	mesh {
		triangle { <-6,18.667,-66>, <6,18.667,-66>, <6,12.667,-48> }
		triangle { <6,12.667,-48>, <-6,12.667,-48>, <-6,18.667,-66> }
		material { L3Color72 }
	}
	mesh {
		triangle { <-40,20,-10>, <-33.25,13.667,-11.25>, <-20,0,-10> }
		triangle { <-40,20,-10>, <-38.652,20,-14.044>, <-33.25,13.667,-11.25> }
		triangle { <-31,13.417,-17.25>, <-36.53,20,-20.41>, <-34.926,20,-25.222> }
		triangle { <-34.926,20,-25.222>, <-34.106,19.533,-26.281>, <-31,13.417,-17.25> }
		triangle { <-34.39,20,-26.829>, <-33.285,19.464,-28.537>, <-34.106,19.533,-26.281> }
		triangle { <-34.106,19.533,-26.281>, <-34.926,20,-25.222>, <-34.39,20,-26.829> }
		triangle { <-34.026,20,-27.921>, <-32.906,19.507,-29.801>, <-33.285,19.464,-28.537> }
		triangle { <-33.285,19.464,-28.537>, <-34.39,20,-26.829>, <-34.026,20,-27.921> }
		triangle { <-34.106,19.533,-26.281>, <-31.851,17.004,-25.461>, <-31,13.417,-17.25> }
		triangle { <-33.524,20,-29.428>, <-32.085,19.438,-32.057>, <-32.906,19.507,-29.801> }
		triangle { <-32.906,19.507,-29.801>, <-34.026,20,-27.921>, <-33.524,20,-29.428> }
		triangle { <-20,20,-70>, <-32.085,19.438,-32.057>, <-33.524,20,-29.428> }
		triangle { <-31.03,16.935,-27.716>, <-33.285,19.464,-28.537>, <-32.906,19.507,-29.801> }
		triangle { <-32.906,19.507,-29.801>, <-30.651,16.978,-28.981>, <-31.03,16.935,-27.716> }
		triangle { <-20,0,-10>, <-33.25,13.667,-11.25>, <-31,13.417,-17.25> }
		triangle { <-22.1,10.933,-36.5>, <-29.83,16.909,-31.236>, <-32.085,19.438,-32.057> }
		triangle { <-32.085,19.438,-32.057>, <-26.2,15.433,-37.7>, <-22.1,10.933,-36.5> }
		triangle { <-24.75,15.417,-42>, <-26.2,15.433,-37.7>, <-32.085,19.438,-32.057> }
		triangle { <-32.085,19.438,-32.057>, <-20,20,-70>, <-24.75,15.417,-42> }
		triangle { <-20,0,-10>, <-31,13.417,-17.25>, <-31.851,17.004,-25.461> }
		triangle { <-31.851,17.004,-25.461>, <-22.1,10.933,-36.5>, <-20,0,-10> }
		triangle { <-31.851,17.004,-25.461>, <-31.03,16.935,-27.716>, <-22.1,10.933,-36.5> }
		triangle { <-22.1,10.933,-36.5>, <-31.03,16.935,-27.716>, <-30.651,16.978,-28.981> }
		triangle { <-30.651,16.978,-28.981>, <-29.83,16.909,-31.236>, <-22.1,10.933,-36.5> }
		triangle { <-20,20,-70>, <-20.8,11,-40.6>, <-24.75,15.417,-42> }
		triangle { <-20,0,-10>, <-22.1,10.933,-36.5>, <-20.8,11,-40.6> }
		triangle { <-20,0,-10>, <-20.8,11,-40.6>, <-20,20,-70> }
		triangle { <-12.6,12.667,-48>, <-12.6,0.133,-10.4>, <-20,0,-10> }
		triangle { <-20,0,-10>, <-20,20,-70>, <-12.6,12.667,-48> }
		triangle { <-20,0,-10>, <-12.6,0.133,-10.4>, <12.6,0.133,-10.4> }
		triangle { <12.6,0.133,-10.4>, <20,0,-10>, <-20,0,-10> }
		triangle { <-20,20,-70>, <-12.6,19.033,-67.1>, <-12.6,12.667,-48> }
		triangle { <-6.6,19.033,-67.1>, <-12.6,19.033,-67.1>, <-20,20,-70> }
		triangle { <6.6,19.033,-67.1>, <-6.6,19.033,-67.1>, <-20,20,-70> }
		triangle { <-20,20,-70>, <20,20,-70>, <6.6,19.033,-67.1> }
		triangle { <20,20,-70>, <12.6,19.033,-67.1>, <6.6,19.033,-67.1> }
		triangle { <20,0,-10>, <12.6,0.133,-10.4>, <12.6,12.667,-48> }
		triangle { <12.6,12.667,-48>, <20,20,-70>, <20,0,-10> }
		triangle { <20,20,-70>, <12.6,12.667,-48>, <12.6,19.033,-67.1> }
		triangle { <20,0,-10>, <33.25,13.667,-11.25>, <40,20,-10> }
		triangle { <31,13.417,-17.25>, <33.25,13.667,-11.25>, <20,0,-10> }
		triangle { <20,20,-70>, <31,13.417,-17.25>, <20,0,-10> }
		triangle { <20,20,-70>, <36.53,20,-20.41>, <31,13.417,-17.25> }
		triangle { <40,20,-10>, <33.25,13.667,-11.25>, <38.652,20,-14.044> }
	}
}
#end
#end // ifndef (_48933ps1_dot_dat)


//// Part 3024.dat
#ifndef (_3024_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3024)
		#include "lg_3024.inc"
	#end
#end
#declare _3024_dot_dat = #if (L3Quality = 0) box { <-10,-4,-10>, <10,8,10> } #else object {
// Plate  1 x  1
	lg_3024
	transform L3LgeoToLDraw
}
#end
#declare _3024_dot_dat_clear = #if (L3Quality = 0) box { <-10,-4,-10>, <10,8,10> } #else object {
// Plate  1 x  1
	lg_3024_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3024_dot_dat)


//// Part 4589.dat
#ifndef (_4589_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_4589)
		#include "lg_4589.inc"
	#end
#end
#declare _4589_dot_dat = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else object {
// Cone  1 x  1
	lg_4589
	transform L3LgeoToLDraw
}
#end
#declare _4589_dot_dat_clear = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else object {
// Cone  1 x  1
	lg_4589_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_4589_dot_dat)


//// Part 3023.dat
#ifndef (_3023_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_3023)
		#include "lg_3023.inc"
	#end
#end
#declare _3023_dot_dat = #if (L3Quality = 0) box { <-20,-4,-10>, <20,8,10> } #else object {
// Plate  1 x  2
	lg_3023
	transform L3LgeoToLDraw
}
#end
#declare _3023_dot_dat_clear = #if (L3Quality = 0) box { <-20,-4,-10>, <20,8,10> } #else object {
// Plate  1 x  2
	lg_3023_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_3023_dot_dat)


//// Primitive 4-4ring3.dat
#ifndef (_4_dash_4ring3_dot_dat)
#declare _4_dash_4ring3_dot_dat = disc { <0,0,0>, <0,1,0>, 4, 3 }
#end // ifndef (_4_dash_4ring3_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive stud4o.dat
#ifndef (stud4o_dot_dat)
#declare stud4o_dot_dat = union {
// Stud Tube Open without Outer Cylinder
// Name: stud4o.dat
// Author: Magnus Forsberg [MagFors]
// !LDRAW_ORG Primitive UPDATE 2011-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HELP This stud is a "antistud" to be used like a underside stud,
// !HELP but without the outer cylinder.
// !HELP 1 47 0 0 0 1 0 0 0 1 0 0 0 1 stud4.dat
// !HISTORY 2011-12-29 [PTadmin] Official Update 2011-02
	object { _4_dash_4ring3_dot_dat matrix <2,0,0,0,1,0,0,0,2,0,-4,0> }
// BFC INVERTNEXT
	object { _4_dash_4cylc_dot_dat matrix <-6,0,0,0,-4,0,0,0,6,0,0,0> }
}
#end // ifndef (stud4o_dot_dat)


//// Primitive t04ounit.dat
#ifndef (t04ounit_dot_dat)
#declare t04ounit_dot_dat = object {
// Torus Outside  1 x 1 x 0.25
// Name: t04ounit.dat
// Author: John Riley [jriley]
// !LDRAW_ORG Primitive UPDATE 2013-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2004-10-30 [mkennedy] Removed POV code
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-10-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-12-20 [TomChen] Complete rewrite
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
// !HISTORY 2013-09-27 [MMR1988] Recreated to fix condlines
// !HISTORY 2013-12-23 [PTadmin] Official Update 2013-02
// Major Radius: 1
// Tube(Minor) Radius: 1
// Segments(Sweep): 4/16 = 0.25
// 1  9  0 0 0  1 0 0  0 1 0  0 0 1 4-4edge.dat
// 1  12  1 0 0 1 0 0  0 0 1  0 1 0  4-4edge.dat
	mesh {
		triangle { <1,1,0>, <0.9239,1,0.3827>, <1.2775,0.9239,0.5292> }
		triangle { <1.2775,0.9239,0.5292>, <1.3827,0.9239,0>, <1,1,0> }
		triangle { <1.3827,0.9239,0>, <1.2775,0.9239,0.5292>, <1.5772,0.7071,0.6533> }
		triangle { <1.5772,0.7071,0.6533>, <1.7071,0.7071,0>, <1.3827,0.9239,0> }
		triangle { <1.7071,0.7071,0>, <1.5772,0.7071,0.6533>, <1.7775,0.3827,0.7363> }
		triangle { <1.7775,0.3827,0.7363>, <1.9239,0.3827,0>, <1.7071,0.7071,0> }
		triangle { <1.9239,0.3827,0>, <1.7775,0.3827,0.7363>, <1.8478,0,0.7654> }
		triangle { <1.8478,0,0.7654>, <2,0,0>, <1.9239,0.3827,0> }
		triangle { <0.9239,1,0.3827>, <0.7071,1,0.7071>, <0.9777,0.9239,0.9777> }
		triangle { <0.9777,0.9239,0.9777>, <1.2775,0.9239,0.5292>, <0.9239,1,0.3827> }
		triangle { <1.2775,0.9239,0.5292>, <0.9777,0.9239,0.9777>, <1.2071,0.7071,1.2071> }
		triangle { <1.2071,0.7071,1.2071>, <1.5772,0.7071,0.6533>, <1.2775,0.9239,0.5292> }
		triangle { <1.5772,0.7071,0.6533>, <1.2071,0.7071,1.2071>, <1.3604,0.3827,1.3604> }
		triangle { <1.3604,0.3827,1.3604>, <1.7775,0.3827,0.7363>, <1.5772,0.7071,0.6533> }
		triangle { <1.7775,0.3827,0.7363>, <1.3604,0.3827,1.3604>, <1.4142,0,1.4142> }
		triangle { <1.4142,0,1.4142>, <1.8478,0,0.7654>, <1.7775,0.3827,0.7363> }
		triangle { <0.7071,1,0.7071>, <0.3827,1,0.9239>, <0.5292,0.9239,1.2775> }
		triangle { <0.5292,0.9239,1.2775>, <0.9777,0.9239,0.9777>, <0.7071,1,0.7071> }
		triangle { <0.9777,0.9239,0.9777>, <0.5292,0.9239,1.2775>, <0.6533,0.7071,1.5772> }
		triangle { <0.6533,0.7071,1.5772>, <1.2071,0.7071,1.2071>, <0.9777,0.9239,0.9777> }
		triangle { <1.2071,0.7071,1.2071>, <0.6533,0.7071,1.5772>, <0.7363,0.3827,1.7775> }
		triangle { <0.7363,0.3827,1.7775>, <1.3604,0.3827,1.3604>, <1.2071,0.7071,1.2071> }
		triangle { <1.3604,0.3827,1.3604>, <0.7363,0.3827,1.7775>, <0.7654,0,1.8478> }
		triangle { <0.7654,0,1.8478>, <1.4142,0,1.4142>, <1.3604,0.3827,1.3604> }
		triangle { <0.3827,1,0.9239>, <0,1,1>, <0,0.9239,1.3827> }
		triangle { <0,0.9239,1.3827>, <0.5292,0.9239,1.2775>, <0.3827,1,0.9239> }
		triangle { <0.5292,0.9239,1.2775>, <0,0.9239,1.3827>, <0,0.7071,1.7071> }
		triangle { <0,0.7071,1.7071>, <0.6533,0.7071,1.5772>, <0.5292,0.9239,1.2775> }
		triangle { <0.6533,0.7071,1.5772>, <0,0.7071,1.7071>, <0,0.3827,1.9239> }
		triangle { <0,0.3827,1.9239>, <0.7363,0.3827,1.7775>, <0.6533,0.7071,1.5772> }
		triangle { <0.7363,0.3827,1.7775>, <0,0.3827,1.9239>, <0,0,2> }
		triangle { <0,0,2>, <0.7654,0,1.8478>, <0.7363,0.3827,1.7775> }
// conditional lines
// Build by Primitive Generator 2
	}
}
#end // ifndef (t04ounit_dot_dat)


//// Primitive 4-4ring1.dat
#ifndef (_4_dash_4ring1_dot_dat)
#declare _4_dash_4ring1_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 }
#end // ifndef (_4_dash_4ring1_dot_dat)


//// Primitive 4-4ring2.dat
#ifndef (_4_dash_4ring2_dot_dat)
#declare _4_dash_4ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (_4_dash_4ring2_dot_dat)


//// Primitive 1-4cyls.dat
#ifndef (_1_dash_4cyls_dot_dat)
#declare _1_dash_4cyls_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,sqrt(1/2) } }
}
#end // ifndef (_1_dash_4cyls_dot_dat)


//// Primitive 4-4con3.dat
#ifndef (_4_dash_4con3_dot_dat)
#declare _4_dash_4con3_dot_dat = cone { <0,0,0>, 4, <0,1,0>, 3 open }
#end // ifndef (_4_dash_4con3_dot_dat)


//// Part 4599a.dat
#ifndef (_4599a_dot_dat)
#declare _4599a_dot_dat = #if (L3Quality = 0) box { <-8,-4,-8>, <8,24,20> } #else union {
// Tap  1 x  1 with Hole in Spout
// Name: 4599a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS valve, water, faucet, hydrant, pipe, plug, sink
// !KEYWORDS kitchen, bathroom, lavatory, restroom, sauna, shower,
// !KEYWORDS shower room, spa, toilet, washroom
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 1999-05-17 [PTadmin] Official Update 1999-03
// !HISTORY 2003-07-03 [technog] corrected errors, added primitives and BFC
// !HISTORY 2005-11-01 [Holly-Wood] added hole, fixed errors, added keywords
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-07-08 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-12-06 [C3POwen] updated with more primitives
// !HISTORY 2012-12-07 [PTadmin] Renamed from 4599
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { stud4o_dot_dat matrix <1,0,0,0,-1,0,0,0,-1,0,20,0> }
	object { _4_dash_4cyli_dot_dat matrix <8,0,0,0,-4,0,0,0,-8,0,24,0> }
	object { t04ounit_dot_dat matrix <-4,0,0,0,-4,0,0,0,-4,0,20,0> }
	object { t04ounit_dot_dat matrix <0,0,4,0,-4,0,-4,0,0,0,20,0> }
	object { t04ounit_dot_dat matrix <4,0,0,0,-4,0,0,0,4,0,20,0> }
	object { t04ounit_dot_dat matrix <0,0,-4,0,-4,0,4,0,0,0,20,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,16,0,0,0,4,0,0,0> }
	object { _4_dash_4ring2_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,0,0> }
	#if (L3Studs)
		object { stud_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,0,0> }
	#end
	object { _1_dash_4cyls_dot_dat matrix <0,4,0,0,0,-4,-4,0,0,0,4,4> }
	object { _1_dash_4cyls_dot_dat matrix <0,-4,0,0,0,-4,-4,0,0,0,4,4> }
	object { _1_dash_4cyls_dot_dat matrix <0,-4,0,0,0,-4,4,0,0,0,4,4> }
	object { _1_dash_4cyls_dot_dat matrix <0,4,0,0,0,-4,4,0,0,0,4,4> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,0,6,0,4,0,0,4,4> }
	object { _4_dash_4con3_dot_dat matrix <0,1,0,0,0,6,1,0,0,0,4,10> }
	object { _4_dash_4cylc_dot_dat matrix <4,0,0,0,0,4,0,-4,0,0,4,16> }
	object { _4_dash_4ring1_dot_dat matrix <0,2,0,0,0,-1,2,0,0,0,4,20> }
// BFC INVERTNEXT
	object { _4_dash_4cylc_dot_dat matrix <2,0,0,0,0,3,0,-2,0,0,4,17> }
}
#end
#end // ifndef (_4599a_dot_dat)


//// Submodel 6964-wing.ldr
#ifndef (_6964_dash_wing_dot_ldr)
#declare _6964_dash_wing_dot_ldr = union {
	// 1 19  24 0 0  0 -1 0  0 0 1  -1 0 0 4589.dat
	object {
		_4589_dot_dat
		matrix <0,0,-1,-1,0,0,0,1,0,24,0,0>
		material { L3Color19 }
	}
	// 1 19  54 20 0  -1 0 0  0 1 0  0 0 -1 3023.dat
	object {
		_3023_dot_dat
		matrix <-1,0,0,0,1,0,0,0,-1,54,20,0>
		material { L3Color19 }
	}
	// 1 19  44 -4 0  0 0 -1  0 1 0  1 0 0 4599a.dat
	object {
		_4599a_dot_dat
		matrix <1-L3SW/16,0,0,0,1-L3SW/28,0,0,0,1-L3SW/28,0,L3SW/2.8,L3SW/4.66667>
		matrix <0,0,1,0,1,0,-1,0,0,44,-4,0>
		material { L3Color19 }
	}
}
#end // ifndef (_6964_dash_wing_dot_ldr)


//// Part 4081b.dat
#ifndef (_4081b_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_4081b)
		#include "lg_4081b.inc"
	#end
#end
#declare _4081b_dot_dat = #if (L3Quality = 0) box { <-10,-6,-28>, <10,10,10> } #else object {
// Plate  1 x  1 with Clip Light Type 2
	lg_4081b
	transform L3LgeoToLDraw
}
#end
#declare _4081b_dot_dat_clear = #if (L3Quality = 0) box { <-10,-6,-28>, <10,10,10> } #else object {
// Plate  1 x  1 with Clip Light Type 2
	lg_4081b_clear
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_4081b_dot_dat)


//// Part 4287.dat
#ifndef (_4287_dot_dat)
#if (L3Quality > 0)
	#ifndef (lg_4287)
		#include "lg_4287.inc"
	#end
#end
#declare _4287_dot_dat = #if (L3Quality = 0) box { <-10,-4,-50>, <10,24,10> } #else object {
// Slope Brick 33  3 x  1 Inverted
	lg_4287
	transform L3LgeoToLDraw
}
#end
#declare _4287_dot_dat_clear = #if (L3Quality = 0) box { <-10,-4,-50>, <10,24,10> } #else object {
// Slope Brick 33  3 x  1 Inverted
	lg_4287_clear
	transform L3LgeoToLDraw
}
#end
#if (L3Quality > 0)
#declare _4287_dot_dat_slope = object {
// Slope Brick 33  3 x  1 Inverted
	lg_4287_slope
	transform L3LgeoToLDraw
}
#end
#end // ifndef (_4287_dot_dat)


//// Model csi.ldr
#ifndef (csi_dot_ldr)
#declare csi_dot_ldr = union {
// ROTSTEP  0 0 0
	// 1 72  14.1421 27.1556 23.9584  -0.707107 0 0.707107  0.276289 0.920505 0.276289  -0.650895 0.390731 -0.650895 3795.dat
	object {
		_3795_dot_dat
		matrix <-0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,0.276289,-0.650895,14.1421,27.1556,23.9584>
		material { L3Color72 }
	}
	// 1 378  49.4975 5.97711 53.3773  -0.707107 0 -0.707107  -0.276289 0.920505 0.276289  0.650895 0.390731 -0.650895 3794a.dat
	object {
		_3794a_dot_dat
		matrix <1-L3SW/40,0,0,0,1-L3SW/12,0,0,0,1-L3SW/20,0,L3SW/6,0>
		matrix <-0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,0.276289,-0.650895,49.4975,5.97711,53.3773>
		material { L3Color378 }
	}
	// 1 19  7.07107 22.5544 14.3236  0.707107 0 -0.707107  -0.276289 0.920505 -0.276289  0.650895 0.390731 0.650895 3680c01.dat
	object {
		_3680c01_dot_dat
		matrix <0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,-0.276289,0.650895,7.07107,22.5544,14.3236>
		material { L3Color19 }
	}
	// 1 70  42.4264 -0.46231 27.5987  0.707107 0 -0.707107  -0.276289 0.920505 -0.276289  0.650895 0.390731 0.650895 3040b.dat
	object {
		_3040b_dot_dat
		matrix <0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,-0.276289,0.650895,42.4264,-0.46231,27.5987>
		material { L3Color70 }
	}
	#if (L3Quality > 0)
		object {
			_3040b_dot_dat_slope
			matrix <0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,-0.276289,0.650895,42.4264,-0.46231,27.5987>
			material { L3Color70_slope }
		}
	#end
	// 1 70  28.2843 -5.98808 40.6166  -0.707107 0 0.707107  0.276289 0.920505 0.276289  -0.650895 0.390731 -0.650895 3680c02.dat
	object {
		_3680c02_dot_dat
		matrix <1-L3SW/41.8066,0,0,0,1-L3SW/12,0,0,0,1-L3SW/41.8066,0,L3SW/6,0>
		matrix <-0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,0.276289,-0.650895,28.2843,-5.98808,40.6166>
		material { L3Color70 }
	}
	// 1 72  28.2843 -2.30058 11.455  0.707107 0 -0.707107  -0.276289 0.920505 -0.276289  0.650895 0.390731 0.650895 4070.dat
	object {
		_4070_dot_dat
		matrix <0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,-0.276289,0.650895,28.2843,-2.30058,11.455>
		material { L3Color72 }
	}
	// 1 72  14.1421 -7.82635 24.4729  -0.707107 0 0.707107  0.276289 0.920505 0.276289  -0.650895 0.390731 -0.650895 4070.dat
	object {
		_4070_dot_dat
		matrix <-0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,0.276289,-0.650895,14.1421,-7.82635,24.4729>
		material { L3Color72 }
	}
	// 1 70  7.07107 7.82635 8.07188  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 48933ps1.dat
	object {
		_48933ps1_dot_dat
		matrix <1-L3SW/80,0,0,0,1-L3SW/28,0,0,0,1-L3SW/80,0,L3SW/2.8,L3SW/-2.66667>
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,7.07107,7.82635,8.07188>
		material { L3Color70 }
	}
	// 1 378  7.07107 0.46231 4.94603  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 3794a.dat
	object {
		_3794a_dot_dat
		matrix <1-L3SW/40,0,0,0,1-L3SW/12,0,0,0,1-L3SW/20,0,L3SW/6,0>
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,7.07107,0.46231,4.94603>
		material { L3Color378 }
	}
	// 1 378  21.2132 -12.4275 14.8381  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 3794a.dat
	object {
		_3794a_dot_dat
		matrix <1-L3SW/40,0,0,0,1-L3SW/12,0,0,0,1-L3SW/20,0,L3SW/6,0>
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,21.2132,-12.4275,14.8381>
		material { L3Color378 }
	}
	// 1 378  7.07107 -6.90173 1.82018  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 3024.dat
	object {
		_3024_dot_dat
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,7.07107,-6.90173,1.82018>
		material { L3Color378 }
	}
	// 1 71  7.07107 -14.2658 -1.30567  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 3024.dat
	object {
		_3024_dot_dat
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,7.07107,-14.2658,-1.30567>
		material { L3Color71 }
	}
	// 1 0  32.5269 8.5622 11.4569  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 6964-wing.ldr
	object { _6964_dash_wing_dot_ldr matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,32.5269,8.5622,11.4569> }
	// 1 0  9.89949 -0.279032 32.2856  -0.707107 0 -0.707107  -0.276289 0.920505 0.276289  0.650895 0.390731 -0.650895 6964-wing.ldr
	object { _6964_dash_wing_dot_ldr matrix <-0.707107,-0.276289,0.650895,0,0.920505,0.390731,-0.707107,0.276289,-0.650895,9.89949,-0.279032,32.2856> }
	// 1 71  -14.1421 -13.3411 -23.9584  -0.707107 0 0.707107  0.276289 0.920505 0.276289  -0.650895 0.390731 -0.650895 3680c01.dat
	object {
		_3680c01_dot_dat
		matrix <-0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,0.276289,-0.650895,-14.1421,-13.3411,-23.9584>
		material { L3Color71 }
	}
	// 1 71  -49.4975 7.83732 -53.3773  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 4081b.dat
	object {
		_4081b_dot_dat
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,-49.4975,7.83732,-53.3773>
		material { L3Color71 }
	}
	// 1 378  -7.07107 -8.73999 -14.3236  0.707107 0 0.707107  0.276289 0.920505 -0.276289  -0.650895 0.390731 0.650895 4287.dat
	object {
		_4287_dot_dat
		matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,-7.07107,-8.73999,-14.3236>
		material { L3Color378 }
	}
	#if (L3Quality > 0)
		object {
			_4287_dot_dat_slope
			matrix <0.707107,0.276289,-0.650895,0,0.920505,0.390731,0.707107,-0.276289,0.650895,-7.07107,-8.73999,-14.3236>
			material { L3Color378_slope }
		}
	#end
}
#end // ifndef (csi_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-76.3676,-32.6924,-80.4557>;
#declare L3ModelBBoxMax = <91.9239,60.3103,97.9012>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <7.77816,13.809,8.72277>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <168.291,93.0026,178.357>
#declare L3FloorY = L3ModelBBoxMax.y;

//// Camera
camera {
	#declare L3PercentageBack = 0; // Percentage of radius
	#declare L3Orthographic = 0; // Set to 1 for orthographic view
	#declare L3ViewingAngle = 0.01; // degrees
	#declare L3RollAngle = 0; // degrees
	#declare L3AspectRatio = 1.54485;
	#declare L3Sky = -y;
	#declare L3StereoAngle = 5; // degrees
	//5 degrees corresponds to a distance between eyes (stereo cameras)
	//of 1/12 of distance to model.
	#declare L3StereoView = 0; // Normal view
	//Uncomment either two lines below to make stereo images:
	//#declare L3StereoView = -L3StereoAngle/2; // Left view
	//#declare L3StereoView =  L3StereoAngle/2; // Right view

	#if (version >= 3.5)
		#if (abs(L3AspectRatio-image_width/image_height) > 0.01)
			#error "L3AspectRatio does not match image size. Select a correct image size or use option -car<ar>."
		#end
	#end

	sky      L3Sky
	right    -L3AspectRatio*x
	#if (L3Orthographic)

		#error "* * doesn't work yet..."

		orthographic
		#declare L3LookAt = <7.77816,13.809,8.72277>; // BBox center (not -cla)
		#declare L3OrthoScale = (1+L3PercentageBack/100.0)*1;
		#declare L3Location = L3LookAt - 2000*<-0,0,1>;
		location L3Location
		scale    L3OrthoScale
	#else
		#declare L3LookAt = <7.77816,13.809,8.72277>; // Calculated (not -cla)
		#declare L3Location = <7.77816,13.809,-6.23133e+006>;
		#declare L3Location = L3Location + L3PercentageBack/100.0*(L3Location-L3LookAt);
		//#if (L3StereoView)
		//	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, <0,-1,0>, L3StereoView);
		//#end
		angle    L3ViewingAngle
		location L3Location
	#end
	look_at  L3LookAt
	rotate   <0,1e-5,0> // Prevent gap between adjacent quads

#declare Closer = L3LookAt+0.1*(L3Location-L3LookAt);

	translate -L3Location
	#declare vx=vaxis_rotate(x,L3LookAt-L3Location,L3RollAngle);
	#declare vy=vaxis_rotate(y,L3LookAt-L3Location,L3RollAngle);
	#declare vz=vaxis_rotate(z,L3LookAt-L3Location,L3RollAngle);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	translate L3Location

#if (L3StereoView)
	translate -L3Location
	#declare Ver=<0,-1,0>;
	#declare vx=vaxis_rotate(x,Ver,L3StereoView);
	#declare vy=vaxis_rotate(y,Ver,L3StereoView);
	#declare vz=vaxis_rotate(z,Ver,L3StereoView);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, Ver, L3StereoView);
	translate L3Location
#end


//////////////////////////////////////////////////
// What about L3RollAngle... before/after stereo ?
//////////////////////////////////////////////////

	//Rotate model around its center:
	//translate -L3ModelBBoxCenter
	//rotate    <0,360*clock,0>
	//translate L3ModelBBoxCenter
}

//// Lights
light_source {
	<7.77816,-4.40621e+006,-4.40621e+006>  // Latitude,Longitude,Radius: 45,0,6.23134e+006
	color rgb <1,1,1>
}
light_source {
	<4.67351e+006,-3.11565e+006,2.69826e+006>  // Latitude,Longitude,Radius: 30,120,6.23134e+006
	color rgb <1,1,1>
}
light_source {
	<-2.69824e+006,-5.39648e+006,1.55784e+006>  // Latitude,Longitude,Radius: 60,-120,6.23134e+006
	color rgb <1,1,1>
}

//// ModelObject csi.ldr
object { csi_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:       16            24            73
// POV Equivs:       -             9 (38%)
// LGEO:            11 (69%)       3 (13%)
// Model has 21 parts (69 studs)
// WARNING: stud4.dat not written to POV file
// WARNING: 2-4disc.dat not written to POV file
// WARNING: stug-2x2.dat not written to POV file
// WARNING: 3-8edge.dat not written to POV file
// WARNING: 3-8cyli.dat not written to POV file
// WARNING: 3-8rin12.dat not written to POV file
// WARNING: 3-8cylo.dat not written to POV file
// WARNING: 3-8ring2.dat not written to POV file
// WARNING: 1-4edge.dat not written to POV file
// WARNING: 1-4ndis.dat not written to POV file
// WARNING: 1-4cyli.dat not written to POV file
// WARNING: s\3680s01.dat not written to POV file
// WARNING: box4.dat not written to POV file
// WARNING: 4-4cylo.dat not written to POV file
// WARNING: 4-4ndis.dat not written to POV file
// WARNING: box3u5p.dat not written to POV file
// WARNING: box4o4a.dat not written to POV file
// WARNING: box2-9.dat not written to POV file
// WARNING: 1-8chrd.dat not written to POV file
// WARNING: 1-8edge.dat not written to POV file
// WARNING: s\3040s01.dat not written to POV file
// WARNING: 2-4cyli.dat not written to POV file
// WARNING: stud2a.dat not written to POV file
// WARNING: axlehole.dat not written to POV file
// WARNING: axlehol2.dat not written to POV file
// WARNING: axlehol3.dat not written to POV file
// WARNING: 4-4ring4.dat not written to POV file
// WARNING: 4-4con4.dat not written to POV file
// WARNING: ring3.dat not written to POV file
// WARNING: 2-4cyls.dat not written to POV file

//// End
