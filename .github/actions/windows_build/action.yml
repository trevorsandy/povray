# LPub3D Raytracer-cui build actions
# Trevor SANDY <trevor.sandy@gmail.com>
# Last Update: September 10, 2024
#
name: 'Build POV-Ray CLI for Windows Binary'
description: 'Build POV-Ray CLI for Windows Binary'

inputs:
  pov-ray-is-autobuild:
    description: 'POV_RAY_IS_AUTOBUILD value'
    required: true
    default: '1'
  pov-ray-build-id:
    description: 'POV_RAY_BUILD_ID value'
    required: true
  version-base:
    description: 'VERSION_BASE value'
    required: true
  built-by:
    description: 'BUILT_BY value'
    required: true
    default: 'GitHub for LPub3D'
  solution:
    description: 'Subdirectory of `windows` in which `povray.sln` is located - vs2015'
    required: true
  configuration:
    description: 'Solution configuration to build - Release, Release-SSE2'
    required: false
    default: 'Release'
  platform:
    description: 'Solution platform to build - x64, Win32'
    required: false
    default: 'x64'
  toolset:
    description: 'Platform toolset version - v142(x64), v140(Win32)'
    required: false
    default: 'v142'
  compatibility:
    description: 'Toolset compatibility -e.g. _xp(Win32)'
    required: false
    default: ''
  msbuild-options:
    description: 'Additional MSBuild options -e.g. /p:TargetUniversalCRTVersion=10.0.10586.0(Win32)'
    required: false
    default: ''

runs:
  using: composite
  steps:
  - name: VC v140 Build Tools
    if: ${{ inputs.platform == 'Win32' }}
    run: |
      Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
      $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
      $ComponentsToAdd= @(
        "Microsoft.VisualStudio.Component.VC.140"
        "Microsoft.VisualStudio.Component.WinXP"
      )
      [string]$WorkloadArgs = $ComponentsToAdd | ForEach-Object {" --add " +  $_}
      $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$WorkloadArgs, '--quiet', '--norestart', '--nocache')
      # should be run twice
      $Process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
      $Process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
    shell: pwsh
  - name: Windows 8.1 SDK
    if: ${{ inputs.platform == 'Win32' }}
    run: |
      Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
      Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit"
    shell: pwsh
  - name: Build ${{ inputs.platform }}
    run: |
      $env:PovBuildDefs  = 'POV_RAY_IS_AUTOBUILD=${{ inputs.pov-ray-is-autobuild }};'
      $env:PovBuildDefs += 'POV_RAY_BUILD_ID="${{ inputs.pov-ray-build-id }}";'
      $env:PovBuildDefs += 'VERSION_BASE="${{ inputs.version-base }}";'
      $env:PovBuildDefs += 'BUILT_BY="${{ inputs.built-by }}";'
      $env:PovBuildDefs += '_CONSOLE=1";'
      msbuild `
        /t:Rebuild /m `
        /p:Configuration=${{ inputs.configuration }} `
        /p:Platform=${{ inputs.platform }} `
        /p:PlatformToolset=${{ inputs.toolset }}${{ inputs.compatibility }} `
        ${{ inputs.msbuild-options }} `
        windows/${{ inputs.solution }}/console.vcxproj `
        /clp:ErrorsOnly /nologo
    shell: pwsh
